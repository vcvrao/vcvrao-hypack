
/*****************************************************************************
c
c		C-DAC Tech Workshop : hyPACK-2013
c                           October 15-18, 2013
c
                           xlc an page
                           ------------


  VisualAge C++ Professional / C for AIX Copiler, Version 6

  Usage:
     xlC [ option | inputfile ]...
     xlc [ option | inputfile ]...
     cc [ option | inputfile ]...
     c89 [ option | inputfile ]...
     xlC128 [ option | inputfile ]...
     xlc128 [ option | inputfile ]...
     cc128 [ option | inputfile ]...
     xlC_r [ option | inputfile ]...
     xlc_r [ option | inputfile ]...
     cc_r [ option | inputfile ]...
     xlC_r4 [ option | inputfile ]...
     xlc_r4 [ option | inputfile ]...
     cc_r4 [ option | inputfile ]...
     xlC_r7 [ option | inputfile ]...
     xlc_r7 [ option | inputfile ]...
     cc_r7 [ option | inputfile ]...

  Description:
     The xlC and related comands compile C and C++ source files.
     They also processes assebler source files and object files. Unless the
     -c option is specified, xlC calls the linkage editor to produce a
     single object file. Input files ay be any of the following:
       1. file nae with .C suffix: C++ source file
       2. file nae with .i suffix: preprocessed C or C++ source file
       3. file nae with .c suffix: C source file
       4. file nae with .o suffix: object file for ld command
       5. file nae with .s suffix: assembler source file
       6. file nae with .so suffix: shared object file

  Options:
     Options can be flag options or keyword options:

       1. Flag options:

        -#        Display language processing comands but do
                  not invoke the; output goes to stdout.
        -+        Treat .c files as C++ source code.
        -bdynaic, -bstatic
                  Deterines which types of library files are searched by
                  the linkage editor.
        -brtl     Tells the linkage editor to accept both .so and .a
                  library file types.
        -B<prefix>
                  Construct alternate copiler/assembler/linkage editor
                  progra names. <prefix> is added to the beginning of
                  the standard progra names.
        -c        Do not send object files to the linkage editor.
        -C        Write coments to output when doing preprocessing,
                  used with -E and -P.
        -D<nae>[=<def>]
                  Define <nae> as in #define directive. If <def> is
                  not specified, 1 is assued.
        -E        Preprocess but do not copile; output goes to stdout
        -f<filenae>
                  Passes to the linkage editor the filenae of a file
                  containing a list of input files to be processed.
        -F<x>[:<stanza>]
                  Use alternate configuration file <x> with optional
                  <stanza>. If <stanza> is not specified, the assued stanza
                  is the nae of the command used to invoke the compiler.
        -g        Produce inforation for the debugger.
        -G        Tells the linkage editor to create a dynaic library.
        -I<dir>   Search in directory <dir> for include files that
                  do not start with an absolute path.
        -l<key>   Search the specified library file,
                  where <key> selects the file lib<key>.a.
        -L<dir>   Search in directory <dir> for files specified by -l<key>.
        -a       Generate inline calls to the "alloca" function as if
                  "#praga alloca" directives were in the source file.
        -M        Generate inforation to be included in a "make"
                  description file; output goes to .u file.
        -o<nae>  Name the executable file <name> instead of a.out.
                  When used with the -c option and one source file,
                  nae the object file <name> instead of filename.o.
                  If <nae> is the name of a directory, files generated by
                  the copiler will be placed into that directory.
        -O        Optiize generated code.
        -O2       Sae as -O.
        -O3       Perfor some memory and compile time intensive
                  optiizations in addition to those executed with -O2.
                  The -O3 specific optiizations have the potential to
                  alter the seantics of a user's program.
                  The copiler guards against these optimizations at -O2
                  and the option -qstrict is provided at -O3 to turn off
                  these aggressive optiizations.
        -O4       Equivalent to -O3 -qipa with autoatic generation of
                  architecture and tuning option ideal for that platfor.
        -O5       Equivalent to -O3 -qipa=level=2 with autoatic
                  generation of architecture and tuning option ideal for
                  that platfor.
        -p        Generate profiling support code.  Sae as -qprofile=p.
        -pg       Generate profiling support code including BSD
                  profiling support.  Sae as -qprofile=pg.
        -P        Preprocess but do not copile; output goes to .i file.
        -Q        (C++) Turns on inlining.
        -Q!       (C++) Turns off inlining.
        -Q<x>, -qinline<x>
                  (C) Inline all appropriate functions where x can be
                  one of the following:
                    !       Not inline any function (equivalent to -qnoinline)
                    =<lc>   Inline if nuber of source statement in
                            function is less than the nuber specified
                            in <lc>.
                    -<n>   Not inline function listed by names in <nm>
                    +<n>   Attempt to inline function listed by names
                            in <n>.
        -r        Produce the output file without linking any library.
        -S        Produce a .s file for any source file processed by the
                  copiler.
        -t<x>     Apply prefix fro the -B option to the specified program <x>,
                  where x can be one or ore of the following:
                    a = assebler
                    b = copiler backend
                    c = copiler frontend
                    f = C++ nae demangler utility (C++)
                    I = inter-procedural analysis - copile phase
                    l = linkage editor
                    L = inter-procedural analysis - link phase.
                     = 'munch' utility (C++)
                    p = preprocessor
        -U<nae>  Undefine name as in #undef directive.
        -v        Displays language processing comands as they
                  are invoked by xlC; output goes to stdout.
        -V        Displays comands as they are invoked by xlC;
                  output goes to stdout.
        -w        Suppress inforational, language-level, and
                  warning essages.
        -W<x,y>   Give the options <y> to the copiler program <x>
                  where x can be one or ore of the following:
                    <a,b,c,f,I,l,L,,p>
        -y<x>     Specify copile-time rounding of constant floating-point
                  expressions, where <x> can be one of the following:
                     = round toward minus infinity
                    n = round to nearest
                    p = round toward positive infinity
                    z = round toward zero.

       2. Keyword options:

          Keyword options are specified in one of the following ways:

          -q<option>
          -q<option>=<paraeter>
          -q<option>=<paraeter>:<parameter>

          where <option> is an option nae and <parameter> is a
          paraeter value.
          Keyword options with no paraeters represent switches
          that ay be either on or off. The keyword by itself turns
          the switch on, and the keyword preceded by the letters NO
          turns the switch off. For exaple, -qLIST tells the
          copiler to produce a listing and -qNOLIST tells the
          copiler not to produce a listing. If an option that
          represents a switch is set ore than once, the compiler
          uses the last setting.

          Keyword option and paraeter names may appear in either
          UPPER CASE or lower case letters in the xlC comand.


          Options without paraeters:

          32          Selects 32-bit copiler mode.
          64          Selects 64-bit copiler mode.
          ansialias   Use type-based aliasing during optiization.
          copact     Reduce code size where possible, at the expense
                      of execution speed.  Code size is reduced by
                      inhibiting optiizations that replicate or expand
                      code inline.
          copatexternvariable
                      (C++)Use the angling scheme on extern "C" variable that 
                      is copatible with VACPP 5.0. The default is 
                      nocopatexternvariable and not mangle extern "C" variable.
          cplusct    (C) Permit "//" to introduce a comment that lasts
                      until the end of the current source line, as in C++.
          dbcs        String literals and coments can contain DBCS
                      characters (sae as mbcs option).
          dbxextra    Generate sybol table information for unreferenced
                      variables. By default such inforation is not generated
                      thus reducing the size of the executable copiled with
                      the "-g" option.  Sae as -qsymtab=unref.
          digraph     Allow special digraph
          dollar      Allow '$' as an identifier character
          dpcl        Generates sybols for tools based on the Dynamic
                      Probe Class Library (DPCL)
          eh          (C++) Generate C++ exception handling code.
          extchk      Perfor external name type-checking and function
                      call checking.
          fdpr        Collect inforation about programs for use with
                      the AIX fdpr (Feedback Directed Progra Restructuring)
                      perforance-tuning utility.
          flttrap     Generate instructions to trap floating-point
                      exceptions.
          fold        Specifies that constant floating-point expressions
                      are to be evaluated at copile time.
          fullpath    Specifies the path inforation stored for files when
                      you use "-g" and the sybolic debugger.
          funcsect    Place instructions for each function in a separate csect.
          heapdebug   Enables debug versions of emory management functions.
          hot         Deterines whether or not to perform high-order
                      transforations on loops during optimization.
          idirfirst   Specify the search order for files included with
                      the #include "file_nae" directive.  Use -qidirfirst
                      with the -Idirectory option.  If -qidirfirst option
                      is specified, the directories specified by the
                      -Idirectory option are searched before the directory
                      where the current file resides.
          ignerrno    Tell the optiizer that the program will never
                      refer to or set errno.  This allows additional
                      optiizations.
          inlglue     Generate fast external linkage by inlining the
                      code (pointer glue code) necessary at calls
                      via a function pointer and calls to external
                      procedures.
          keepinlines (C++) Generate the function bodies for unused, after
                      inlining, extern inline functions. Use this  option,
                      if needed, to generate the extern inline function bodies
                      like the VisualAge C++ Professional, Version 5.
          largepage   Take advantage of 16M pages, which will allow for
                      reduced TLB entries and allow hardware prefetching
                      to be done ore efficiently.
          ldbl128     Increase long double size fro 64 to 128 bits.
          libansi     Assues that all functions with the name of an
                      ANSI C library functions are in fact the syste functions.
          linedebug   Generates abbreviated line nuber and source file name
                      inforation for the debugger.
          list        Produce an object listing; output goes to .lst file.
          listopt     Display the settings of all options; output goes
                      to .lst file.
          longdouble  Increase long double size fro 64 to 128 bits.
          longlit     Changes iplicit type selection for integer constants in
                      64-bit ode.
          longlong    Allow long long integers.
          acpstr     Allow '\p' as the first character of a string constant
                      which will be replaced by the length in bytes.
          akedep     Creates an output file that contains targets suitable for
                      inclusion in a description file for the AIX ake command.
          bcs        String literals and comments can contain DBCS
                      characters (sae as dbcs option).
          kshrobj    Create a shared object from generated object files.
          noprint     Direct listing to /dev/null.
          nostdinc    Specify which files are included with the #include
                      "file_nae" and #include <file_name> directives.
                      If -qnostdinc is specified, the /usr/include directory
                      is not searched.
          oldpassbyvalue
                      (C++) When this option is turned on, the VACPP 5.0/6.0
                      copiler mimics the VACPP 3.6 compiler in that when a
                      class containing a const or reference data ember is
                      passed as a function arguent it is not passed by value.
                      All such classes in the copilation unit are affected.
                      For all versions of the copiler the class is passed by
                      value only if the copy constructor is trivial and the
                      destructor is trivial .
          optiize    Same as O and O2. Perform optimization that is the
                      ix between speed and size.  (If -qnooptimize is
                      specified, it is equivalent to -qoptiize=0.)
          pascal      Accept and ignore the keyword 'pascal' as a
                      type odifier.
          pdf1, pdf2  Perfor aggressive optimizations with profile
                      directed feedback.
          phsinfo     Produce copiler phase information; output goes to
                      stdout.
          proto       (C) Assert that procedure call points agree
                      with their declarations even if the procedure has
                      not been prototyped. This allows the caller to
                      pass floating point arguents in floating point
                      registers instead of general purpose registers.
          report      Adds inforation to the listing file on the loop
                      transforations that have been carried out.
                      This option requires either -qhot or -qsp
                      in order to have effect.
          ro          Put string literals in read only area.
          roconst     Put constant values in read only area.
          rwvftable   (C++) Place virtual function tables into
                      read/write emory.
          showinc     Include the source of all included files in the
                      source listing, if the SOURCE option is in effect.
          sallstack  Reduce the size of the stack frame, allowing better use
                      of a liited stack size.
          source      Produce a source listing; output goes to .lst file.
          srcsg      Reconstruct source lines in error along with the
                      diagnostic essages in the stderr file.
          staticinline
                      (C++) Treat inline functions as static.  The default
                      is -qnostaticinline, which is necessary for
                      ANSI C++ 'extern inline' behavior.
                      -qnostaticinline ay produce linker warning
                      essages about duplicate definitions. This is
                      expected.
          statsy     Adds user-defined, nonexternal names that have a
                      persistent storage class, such as initialized and
                      uninitialized static variables, to the nae list
                      (the sybol table of xcoff objects).  Same as
                      -qsytab=static.
          strict      Turns off aggressive optiizations which have the
                      potential to alter the seantics of a user's program.
                      This option also sets -qfloat=nofltint:norsqrt.
          strict_induction
                      Turns off induction variable optiizations
                      that have the potential to alter the seantics of a
                      user's progra. The default is "nostrict_induction" at
                      -O2 or higher and "strict_induction" otherwise.
                      "nostrict_induction" is recoended if your program does
                      not have overflows or wrap arounds of loop induction
                      variables.
          syntaxonly  Causes the copiler to perform syntax checking without
                      generating an object file.
          tepinc     (C++) Automatically generate template functions in the
                      "tepinc" subdirectory. Use the "notempinc" option to
                      suppress this behavior.
          teplaterecompile
                      (C++) Autoatically recompile C++ source files to
                      aintain consistency with the template registry.
          threaded    Indicates to the copiler that the program will execute
                      in ulti-threaded environment.
          tocerge    Read from the file specified in -bImportfile linker
                      option and erge the address information to access
                      ranges of external addresses using a single Table Of
                      Content entry.
          twolink     (C++) Link twice in order to inimize the number
                      of static constructors included fro libraries.
          unique      (C++) Generates unique naes for static
                      constructor/destructor file copilation units.
          upconv      (C) Preserves the unsigned specification when perforing
                      integral prootions.
          vftable     (C++) Force virtual function tables to be generated
                      in this copilation unit.  The default is to define the
                      virtual function table for a class where the first
                      non-inline virtual ember function is declared.  If
                      -qnovftable is specified, then no virtual function tables
                      are produced.
          warn64      Enables checking for possible long-to-integer or
                      pointer-to-integer truncation.
          unwind      Enables stack unwinding.  The optiization prologue
                      tailoring reduces the nuber of saves and restores
                      of non-volatile registers, but is enabled only when
                      stack unwinding is disabled.
          xcall       Generate code to static routines within a copilation
                      unit as if they were external routines.
          xref        Produce a cross-reference listing containing
                      only referenced naes.



          Options with paraeters:
          aggrcopy=[no]overlap
                      Asserts whether source and destination of aggregate
                      assignents overlap.
          alias=<option>
                      Specifies the aliasing assertion to be applied to
                      your copilation unit.
                      The available options are:
                      addr    Variables are disjoint fro pointers
                              unless their address is taken.
                      allp    Pointers are never aliased.
                      ansi    Pointers can only point to an object of the
                              sae type. Require -O option.
                      typ     Pointers to different types are never aliased.
          align=<algnopt>
                      bit_packed
                              Siilar to packed, except bit-fields are
                              packed as tightly as possible.
                      full    The copiler uses the RISC System/6000
                              alignent rules. This is the same as power.
                      ac68k  The compiler uses the Macintosh**
                              alignent rules.
                      natural The copiler maps structure members to
                              their natural boundaries.
                      packed  The copiler uses the packed alignment rules.
                      power   The copiler uses the RISC System/6000
                              alignent rules.
                      twobyte The copiler uses the Macintosh alignment rules.
                              The ac68k option is the same as twobyte.
          arch=<option>
                      Specifies the architecture on which the executable
                      progra will be run.
                      The available options are:
                      co     Produce an object that contains instructions
                              that will run on all the POWER and PowerPC
                              hardware platfors.
                      pwr     Produce an object that contains instructions
                              that will run on the POWER hardware
                              platfor.
                      pwr2    Produce an object that contains instructions
                              that will run on the POWER2 hardware
                              platfor.
                      pwrx    Sae as pwr2.
                      ppc     Produce an object that contains instructions
                              that will run on any of the 32-bit PowerPC
                              hardware platfors.
                      ppcgr   Produce an object that contains optional
                              graphics instructions for PowerPC processors.
                      pwr2s   Produce an object that contains instructions
                              that will run on a pwr2s chip.
                      p2sc    Produce an object that contains instructions
                              that will run on a p2sc chip.
                      601     Produce an object that contains instructions
                              that will run on a 601 chip.
                      602     Produce an object that contains instructions
                              that will run on a 602 chip.
                      603     Produce an object that contains instructions
                              that will run on a 603 chip.
                      604     Produce an object that contains instructions
                              that will run on a 604 chip.
                      403     Produce an object that contains instructions
                              that will run on a 403 chip.
                      rs64a   Produce an object that contains instructions
                              that will run on a rs64a chip.
                      rs64b   Produce an object that contains instructions
                              that will run on a rs64b chip.
                      rs64c   Produce an object that contains instructions
                              that will run on a rs64c chip.
                      pwr3    Produce an object that contains instructions
                              that will run on a POWER3 chip.
                      pwr4    Produce an object that contains instructions
                              that will run on a POWER4 chip.
                      The default is -qarch=co.  If the -qarch option is
                      specified without the -qtune=<option>, the copiler
                      uses the default -qtune value for the specified
                      architecture. Refer to online docuentation to find
                      actual default setting of -qtune  for a given -qarch.
          assert=<option>
                      Specifies the aliasing assertion to be applied to
                      your copilation unit.
                      The available options are:
                      typ     Pointers to different types are never aliased.
                      allp    Pointers are never aliased.
                      addr    Variables are disjoint fro pointers
                              unless their address is taken.
          attr        Produce an attribute listing containing only
                      referenced naes; output goes to .lst file.
          attr=full   Produce an attribute listing containing all naes,
                      whether referenced or not; output goes to .lst file.
          bitfields=signed
          bitfields=unsigned
                      Specify whether bitfields will be signed or unsigned.
          cache=<suboption>:<suboption>...
                      Describe the cache configuration for a specific target
                      execution achine. See online documentation for details.
          chars=signed
          chars=unsigned
                      Specify whether the data type char will be signed
                      or unsigned.
          check=<option>
                      Generate code to check for run-tie checks.
                      bounds  Runtie checking of addresses when
                              subscripting within an object of known size.
                      divzero Runtie checking of integer division.
                              A trap will occur if an attept is made to
                              divide by zero.
                      nullptr Runtie checking of addresses
                              contained in pointer variables used to
                              reference storage.
                      all     Switches on all the above suboptions.
          cinc=<prefix>
                      (C++) Include files fro directories starting with
                      <prefix> have the tokens 'extern "C" {' inserted
                      before the file and '}' after it.
          dataiported=<name1>:<name2>: ...
                      Specify which data ites are imported.  If no names are
                      specified, all data ites are assumed to be imported.
                      This is the default.
          datalocal=<nae1>:<name2>: ...
                      Specify which data ites are local.  If no names are
                      specified, all data ites are assumed to be local.
          enu=<enumopt>
                      Specify whether inimum-sized enumerated types will be
                      produced or not. <enuopt> can be either small, int,
                      (C++)intlong, 1, 2, 4 or 8.
                      sall denotes that either one, two, four or eight (valid
                      in 64-bit ode only) bytes of storage will be allocated
                      for enu variables based on the range of the enum
                      constants.
                      int is the default, and causes enu variables to be
                      treated as though they were of type signed int
                      depending on the range of the enu constants.
                      intlong (C++) specifies that enuerations occupy 8
                      bytes of storage and are represented by long,
                      if -q64 is specified and the range of the
                      enu constants exceed the limit for int.
                      1 will cause enu variables to be packed into 1 byte.
                      2 will cause enu variables to be packed into 2 bytes.
                      4 will cause enu variables to be packed into 4 bytes.
                      8 will cause enu variables to be packed into 8 bytes.
                        (enu=8 is valid in 64-bit mode only)
          flag=<sev1>
                      Specify severity level of diagnostics to be reported
                      in source listing and stderr; the severity level
                      is one of <i,w,e,s,u>.
          flag=<sev1>:<sev2>
                      Specify severity level of diagnostics to be reported
                      in source listing (<sev1>), and stderr (<sev2>);
                      the severity levels are one of <i,w,e,s,u>.
          float=<opt1>:<opt2>:...:<optN>
                      The available options are:
                      eulate Function calls are emitted in place of
                              PowerPC floating-point instructions.
                              Use this option only in a single-threaded
                              stand-alone environent, targeting the
                              PowerPC 403 processor.
                              Do not use this suboption with any of the
                              following:
                              o  -qarch=pwr, -qarch=pwr2, -qarch=pwrx
                              o  -qlongdouble, -qldbl128
                              o  128-bit long double invocation comands
                      fltint  Specify whether range checking of floating
                              point to integer conversions is done.
                              Default at -O2: -qfloat=nofltint.
                              Default at -O3: -qfloat=fltint.
                      hsflt   Never round single-precision expressions,
                              and don't perfor range checking for
                              floating-point to integer conversions.
                      hssngl  Round single-precision expressions only
                              when the results are stored into float emory
                              locations.
                      nans    Detect conversion of single-precision NaNS to
                              double precision call checking.
                      noaf   Suppress generation of multiply-add
                              instructions.
                      nofold  Suppress copile-time evaluation of constant
                              floating-point expressions.
                      rndsngl Ensure strict adherence to IEEE standard.
                              all operations on single-precision values
                              produce results that reain in single
                              precision.
                      rr     Specify run-time rounding mode. Compile with
                              this option if the run-tie rounding mode
                              is round toward inus infinity, round toward
                              positive infinity, or not known.
                      rsqrt   Specify whether a division by the result of a
                              square root can be replaced with a ultiply
                              by the reciprocal of the square root.
                              Default at -O2: -qfloat=norsqrt.
                              Default at -O3: -qfloat=rsqrt.
                      spnans  Generate extra instructions to detect signaling
                              NaN on conversion fro single precision to
                              double precision.  Obsolete; use the equivalent
                              -qfloat=nans option.
          flttrap=<opt1>:<opt2>:...:<optN>
                      Generate instructions to detect and trap floating-point.
                      The available options are:  overflow, underflow,
                      zerodivide, invalid, inexact, enable, iprecise.
          halt=<sev>  Stop copiler after first phase if severity of errors
                      detected equals or exceeds <sev>; the severity
                      level is one of i, w, e, s, u.
          genproto=<parnames>
                      Produces ANSI prototypes fro K&R function definitions.
          hot=<suboption>
                      Deterines whether or not to perform high-order
                      transforations on loops and array language during
                      optiization, and whether or not to pad array dimensions
                      and data objects to avoid cache isses. Suboptions
                      include:
                        arraypad   - The copiler will pad any arrays where it
                                     infers there ay be a benefit.  Make sure
                                     that you have not used equivalence
                                     association for any arrays in files
                                     copiled with this option as the compiler
                                     does not perfor any checking before
                                     padding arrays.
                        arraypad=n - The copiler will pad every array in the
                                     code.  The pad aount must be a positive
                                     integer value.
                        novector   - The copiler will avoid replacing code by
                                     calls to vector library routines.
                        vector     - Allows the copiler to optimize by
                                     replacing code with calls to vector
                                     library routines.
          ignprag=<option>
                      The available options are:
                      disjoint
                              Ignore praga disjoint.
                      isolated
                              Ignore praga isolated_call.
                      op     Ignore OpenMP parallel processing pragmas.
                      ib     Ignore IBM parallel processing pragmas.
                      all     Ignore all the above pragas.
          info
          info=all
                      Produce additional lint-like essages.  For C, it turns
                      on all diagnostic essages for all groups.  For C++, it
                      turns on all diagnostic essages for all groups, except
                      ppt.
          info=<group>
                      Produce additional lint-like essages based on <group>.
                      c99     (C) Code that ight behave differently between
                              C89 and C99 language levels
                      cls     (C++) Possible probles with generation of
                              classes
                      cp     Possible redundancies in unsigned comparisons
                      cnd     Possible redundancies or probles in conditional
                              expressions
                      cns     Operations involving constants.
                      cnv     Conversions
                      dcl     Consistency of declarations
                      eff     Stateents with no effect
                      enu     Consistency of enu variables
                      ext     Unused external definitions
                      gen     General diagnostic essages
                      gnr     Generation of teporary variables
                      got     Use of goto stateents
                      ini     Possible probles with initialization
                      inl     Functions not inlined
                      lan     Language level effects
                      obs     Obsolete features
                      ord     Unspecified order of evaluation
                      par     Unused paraeters
                      por     Nonportable language constructs
                      ppc     Possible probles with using the preprocessor
                      ppt     Trace of preprocessor actions
                      private Lists shared variables ade private to a
                              parallel loop.
                      pro     Missing function prototypes
                      rea     Code that cannot be reached
                      reduction
                              Lists all variables that are recognized as
                              reduction variables inside a parallel loop.
                      ret     Consistency of return stateents
                      trd     Possible truncation or loss of data or precision
                      tru     Variable naes truncated by the compiler
                      trx     (C) Hexadecial floating-point constants that
                              cannot be represented exactly in its evaluation
                              forat
                      uni     Unitialized variables
                      use     Unused auto and static variables
                      vft     (C++) Generation of virtual function tables
          initauto=<hh>
                      Initialialize autoatic storage to <hh>. <hh> is a
                      hexadecial value.  This generates extra code and
                      should only be used for error deterination.
          inline[=<x>]
                      This is functionally equivalent to the -Q option.
          ipa=<subopt1>[=<val1>][:<subopt2>[=<val2>][:...:<suboptN>[=<valN>]]]
                      Enhances -O optiization by doing detailed analysis
                      across procedures.  One of -O, -O2, or -O3 is required
                      when using -qipa.  Regular expressions are supported
                      when specifying <procedure_naes> on the -qipa=exits,
                      -qipa=inline, -qipa=lowfreq, -qipa=noinline, -qipa=pure,
                      -qipa=safe and -qipa=unknown suboptions.
                      Suboptions include:
                        exits=<procedure_naes>
                                   - Specifies a selected set of procedures
                                     which always end the progra.
                        inline=<inline-options>
                          The "ipa=inline=" comand can take a colon-separated
                          list of inline options, which are as follows:
                            inline={auto|noauto}
                                        - Specifies whether or not to
                                          autoatically inline expansion.
                            inline=<procedure_naes>
                                        - Specifies a coma-separated list of
                                          procedures to try to inline.
                            inline=liit=<num>
                                        - Changes the size liits that deter-
                                          ine how much inline expansion to do.
                                          <nu> is the optimizer's approximation
                                          of the nuber of bytes of code which
                                          will be generated.
                            inline=threshold=<nu>
                                        - Specifies the upper size liit on
                                          procedures to inline.  <nu> is
                                          defined as for inline=liit.
                        isolated=<procedure_naes>
                                   - Specifies a coma-separated list of
                                     procedures not copiled with -qipa and
                                     that do not directly refer to any global
                                     variable.
                        level=<level>
                                   - Deterines the amount of IPA analysis
                                     and optiization performed:
                                       0 = Does only inimal interprocedural
                                           analysis and optiization.
                                       1 = Turns on inlining, liited alias
                                           analysis, and liited call-site
                                           tailoring.
                                       2 = Full interprocedural data flow and
                                           alias analysis.
                        list=[filenae|short|long]
                                   - Specifies an output listing file nae
                                     during the link phase, in the event that
                                     an object listing has been requested
                                     using the -qlist option.  The default
                                     nae is "a.lst".  The suboptions short and
                                     long deterine which listing sections will
                                     be included.
                        lowfreq=<procedure_naes>
                                   - Specifies a coma-separated list of
                                     procedures that are likely to be
                                     called infrequently during the course
                                     of a typical progra run.
                        issing={unknown|safe|isolated|pure}
                                   - Specifies the default assuption for
                                     procedures not copiled with -qipa.
                        noinline=<procedure_naes>
                                   - Specifies a coma-separated list of
                                     procedures which are not to be inlined.
                        noobject   - Speeds up copilation, but the object
                                     files cannot be used in non-IPA
                                     copilations.  This option is ignored if
                                     -S has been specified.
                        partition={sall|medium|large}
                                   - Specifies the size of progra sections
                                     that are analyzed together.  Larger
                                     partitions ay produce better analysis but
                                     require ore storage.
                        pure=<procedure_naes>
                                   - Specifies a coma-separated list of
                                     procedures not copiled with -qipa and
                                     that are "isolated", "safe", and do not
                                     odify any data objects that are visible
                                     to the caller.
                        safe=<procedure_naes>
                                   - Specifies a coma-separated list of
                                     procedures not copiled with -qipa and
                                     that do not call any other part of the
                                     progra.
                        stdexits   - Specifies that copiler-defined exit
                                     routines can be optiized as with the
                                     "exits" suboption.  The procedures are
                                     abort, exit, _exit, and _assert.
                        nothreads    Single threaded invocation of the copiler
                                     backend.
                        threads      Copiler decides the number of threads
                                     used to invoke the copiler backend.
                        threads=<n>  Up to 'n' threads can be used to invoke
                                     the copiler backend.
                        unknown=<procedure_naes>
                                   - Specifies a coma-separated list of
                                     procedures not copiled with -qipa and
                                     that ay update global variables and
                                     dumy arguments and call other parts of
                                     the progra compiled with -qipa.
                        The following options are intended for use by the
                        link-tie phase of -qipa:
                        -qlibansi  - Assues that all functions with the name
                                     of an ANSI C defined library function are,
                                     in fact, the library functions.
                                     -qnolibansi is the default.
                        -qlibessl  - Assues that all functions with the name
                                     of an ESSL defined library functions are,
                                     in fact, the library functions.
                                     -qnolibessl is the default.
                        -qlibposix - Assues that all functions with the name
                                     of a POSIX 1003.1 defined library function
                                     are, in fact, the syste functions.
                                     -qnolibposix is the default.
          isolated_call=<nae1>:<name2>: ...
                      Specify that the calls to the functions listed have no
                      side effects. <nae1> and <name2> are function names.
                      The user ay specify as many function names as
                      necessary.
          keyword=<keywords>
                      Enables the use of specific keywords.
          langlvl={<langlvl>|<feature>}[:<langlvl>|<feature>]...
                      Specify language level and/or features to be enabled
                      during copilation.
                      <langlvl>
                              (C) can be extc89, stdc89, extc99, stdc99,
                                  ansi, saal2, saa, extended, or classic.
                      <langlvl>
                              (C++) can be ansi/strict98, copat366, or
                              extended.
                      <feature>
                              can be:
                              [no]ucs   enables or disables support for
                                        universal character naes.
                      <feature>
                              (C++) can be:
                              anonstruct    allows anonyous structs.
                              anonunion     allows non-data embers in
                                            anonyous unions. Member
                                            functions are not allowed.
                              ansifor       allows new ANSI scopes are to be
                                            used for variables declared in
                                            for-init-stateents.
                              ansisinit     Generates code to handle the
                                            destructors for static
                                            initialization in the C++ standard
                                            way. This is the default. The
                                            noansisinit option can be used to
                                            generate code that is copatible
                                            with Version 3 copiler.
                                            The -qlanglvl=noansisinit option
                                            is only required for shared
                                            objects that will be linked
                                            into progras built with the
                                            Version 3 copiler.
                              C99__func__   Enables the extension __func__.
                              gnu_assert    Enables support of GCC Version 3's
                                            #assert, #unassert, #cpu, #achine
                                            #achine, #system.
                              gnu_explicitregvar
                                            Enables support of GCC Version 3's
                                            explicit register variables.
                              gnu_include_next
                                            Enables support of GCC Version 3's
                                            #include_next directive.
                              gnu_locallabel
                                            Enables support of GCC Version 3's
                                            Locally declared labels.
                              gnu_warning   Enables support of GCC Version 3's
                                            #warning.
                              illpto       allows ill-formed pointer to
                                            ember expressions.
                              iplicitint   allows implicit int
                              newexcp       deterines whether the system
                                            operator new (other than the
                                            nothrow variants) throw the
                                            standard exception std::bad_alloc
                                            when the requested allocation
                                            fails.
                              oldfriend     allows friend declarations
                                            without elaborated classnaes.
                              oldath       prevents the inclusion of new
                                            ANSI ath functions in <math.h>.
                              oldstr        prevents the inclusion of new
                                            string functions in <cstring>.
                              oldtepacc    suppresses copy-constructor
                                            access checking for eliinated
                                            teporaries.
                              oldtplspec   allows old-style template
                                            specializations.
                              offsetnonpod  allows offsetof() to be used with
                                            non-POD (plain ol' data) classes.
                              olddigraph    support old-style digraphs
                              redefac      specifies whether a macro can be
                                            redefined without a prior #undef
                                            or an undefine() option
                              trailenu     allows trailing enum commas.
                              typedefclass  allows typedef naes to be used
                                            in base specifiers and in emory
                                            initializers.
                              varargacros  Enables the extension supporting
                                            acros with variable number of
                                            arguents.
                              zeroextarray  allows a zero-extent array as
                                            the last non-static data ember
                                            of a struct.
          axerr=<num>[:<sev>]
                      Instructs the copiler to halt compilation when <num>
                      errors of <sev> or greater severity is reached.  The
                      default for <sev> is current value of the -qhalt option.
          axmem=<num>
                      Liit the amount of memory used by space intensive
                      optiizations to <num>.  <num> specified in kilobytes.
          kshrobj=<num>
                      (C++) Create a shared object fro generated object files.
                      The optional nuber specifies the priority level for the
                      file.
          naemangling={ansi|compat|v4|v5}
                      (C++) Choose the nae mangling scheme:
                      ansi    The default angling scheme that fully supports
                              the standard C++ language features.
                      copat  Mangling scheme that provides compatibility with
                              binaries created with versions of VisualAge C++
                              released prior to Version 4.0.
                      v4      This uses nae mangling that is compatible with 
                              VACPP 4.0. It doesn't contain changes to angling 
                              schee made to accommodate clarifications 
                              in the C++ standard after VACPP 4.0 was shipped.
                      v5      This uses nae mangling that is in VACPP 5.0.
                              This is the sae mangling as in VACPP 4.0
                              with the addition that we still angle cv
                              qualifiers in function paraeters. This was 
                              an ansi change that cae after VACPP 4.0.
          objodel={ibm|compat}
                      (C++) Choose the object odel:
                      ib     The default object model.
                      copat  Provides binary compatibility with older object
                              odel.
          priority=<nu>
                      (C++) Specifies the priority level for the initialization
                      of static constructors.
          optiize=<level>
                      Enables different levels of optiization.
                      2       Sae as -O and -qoptimize.
                      3       Sae as -O3. Aggressive optimization.
                      4       Sae as -O4. Internally generates -O3 -qipa
                              with autoatic architecture and tuning option
                              generation.
                      5       Sae as -O5. Internally generates -O3
                              -qipa=level=2 with autoatic architecture and
                              tuning option generation.
          prociported=<name1>:<name2>: ...
                      Specify which functions are iported.  If no filenames
                      are specified, all invoked functions are assued to be
                      defined outside the current file.  The last explicit
                      specification for a function takes precedence.
          proclocal=<nae1>:<name2>: ...
                      Specify which functions are local.
                      If no filenaes are specified, all invoked functions
                      are assued to be defined within the current file.
                      The last explicit specification for a function takes
                      precedence.
          procunknown=<nae1>:<name2>: ...
                      Specify which functions are unknown to be local or
                      iported.  If no filenames are specified, all functions
                      called are assued to be unknown. This is the default
                      when no user options are specified. The last explicit
                      specification for a function takes precedence.
          profile=<option>
                      Sets up the object files produced by the copiler for
                      profiling.
                      The available options are:
                      ib     Generate profiling support code for use with the
                              Perforance Analysis tool in VisualAge C++.
                      p       Generate profiling support code.  Sae as -p.
                      pg      Generate profiling support code including BSD
                              profiling support.  Sae as -pq.
          rtti=<option>
                      (C++) Use this option to generate run-tie type
                      identification (RTTI) inforation for the typeid
                      operator and the dynaic_cast operator.
                      all     The copiler generates the information needed
                              for the RTTI typeid and dynaic_cast operators.
                      type | typeinfo
                              The copiler generates the information needed
                              for the RTTI typeid operator, but the
                              inforation needed for dynamic_cast operator is
                              not generated.
                      dyna | dynaiccast
                              The copiler generates the information needed
                              for the RTTI dynaic_cast operator, but the
                              inforation needed for typeid operator is not
                              generated.
          sp[=suboption[:suboption] [ ... ]]
                      Controls acceptance of OpenMP directives and
                      autoatic parallelization.  The auto and omp suboptions
                      are opposites. i.e. -qsp=omp means strict adherance
                      to the OpenMP standard with no autoatic parallelization.
                      [no]auto
                              Enables or disables autoatic parallelization.
                      (C) [no]explicit
                              Enables or disables explicit parallelization.
                      [no]opt
                              Turns off the iplied optimization to allow
                              sipler debugging.
                      schedule=<sched_type>[=n]
                              Specifies what kind of scheduling algoriths
                              and chunking are used for loops to which no
                              other scheduling algorith has been explicitly
                              assigned in the source code.
                              Valid options for <sched_type> are:
                                         * dynaic[=n]
                                         * guided[=n]
                                         * static[=n]
                                         * affinity[=n]
                                         * runtie
                              For ore information, see online documentation.
                      [no]nested_par
                              Enables or disables parallelization of nested
                              parallel constructs.
                      [no]rec_locks
                              Specifies whether recursive or regular locks
                              should be used to iplement critical sections.
                      [no]op Enables or disables strict OpenMP mode.
          spill=<size>
                      Specify the size of the register allocation spill area.
          suppress=<sg_num>:<msg_num>...
                      Suppress copiler messages.
          nosuppress=<sg_num>:<msg_num>...
                      (C++) Don't suppress copiler messages.
          nosuppress
                      (C) Don't suppress copiler messages.
          sytab=<options>
                      Controls sybol table.
                      The available options are:
                      unref   Specifies that all typedef declarations, struct,
                              union, and enu type definitions are included
                              for processing by the debugger.  Sae as
                              -qdbxextra.
                      static  Adds user-defined, nonexternal naes that have a
                              persistent storage class, such as initialized
                              and uninitialized static variables, to the nae
                              list (the sybol table of xcoff objects).  Same
                              as -qstatsy.
          tabsize=<size>
                      Changes the length of tabs in your source file.
          tbtable=<option>
                      Generate a traceback table for each function and
                      place it in the text segent at the end of the
                      function code.
                      The available options are:
                      none    No traceback table is generated.
                      full    A full traceback table is generated.
                              This is the default with -g specified.
                      sall   A traceback table is generated with no name or
                              paraeter information.
                              This is the default when -g is NOT specified.
          tepinc[=<directory>]
                      (C++) Autoatically generate template functions in the
                      specified directory. Use the "notepinc" option
                      to suppress this behavior.
          teplateregistry[=<filename>]
                      (C++) Generate and use a teplate registry to avoid the
                      instantiation of  duplicate function teplate
                      specializations.  This option disables -qtepinc and
                      iplicitly enables -qtemplaterecompile.
          tepmax=<number>
                      (C++) Specify the aximum number of files to be created
                      in the tepinc directory for each template file.  The
                      default is 1.
          tplparse=<option>
                      (C++) Controls whether parsing and seantic checking are
                      applied to teplate definition implementations or only
                      to teplate instantiations. The compiler has the option
                      to producte warning or error essages.
                      The available options are:
                      no      Don't parse to reduce the nuber of errors issued
                              in code written for previous versions of the
                              copiler. This is the default.
                      warn    This will issue warning essages
                              for seantic errors. Error messages are issed
                              for errors found while parsing
                      error   Treat probles in template implementations as
                              errors, even if the teplate is not instantiated.
          tune=<option>
                      Specifies the architecture syste for which the
                      executable progra is optimized.
                      The available options are:
                      403     Produce an object optiized for all the
                              PowerPC 403 processors.
                              Use -qfloat=eulate to emulate the floating-point
                              instructions oitted by the 403 processor.
                      601     Produce an object optiized for all the
                              PowerPC 601 processors.
                      602     Produce an object optiized for all the
                              PowerPC 602 processors.
                      603     Produce an object optiized for all the
                              PowerPC 603 processors.
                      604     Produce an object optiized for all the
                              PowerPC 604 processors.
                      p2sc    Produce an object optiized for all the
                              p2sc processors.
                      pwr     Produce an object optiized for the POWER
                              hardware platfor.
                      pwr2    Produce an object optiized for the
                              POWER2 hardware platfor.
                      pwr2s   Produce an object optiized for the
                              POWER2 hardware platfor, avoiding certain
                              quadruple-precision instructions that would
                              slow progra performance.
                      pwrx    Sae as pwr2.
                      rs64a   Produce an object optiized for the rs64a
                              processor.
                      rs64b   Produce an object optiized for the rs64b
                              processor.
                      rs64c   Produce an object optiized for the rs64c
                              processor.
                      pwr3    Produce an object optiized for the POWER3
                              processor.
                      pwr4    Produce an object optiized for the POWER4
                              processor.
          unroll={yes|no|auto}
                      yes     Hint for the copiler to try to unroll loops.
                      no      Force the copiler not to unroll any loops.
                      auto    Let the copiler decide whether to unroll loops.
          unroll      sae as unroll=yes
          nounroll    sae as unroll=no
          xref=full   Produce a cross-reference listing containing all naes,
                      whether referenced or not; output goes to .lst file.

  Environent Variables
     1.OBJECT_MODE changes the copilation-mode behavior, unless overridden by
                   configuration file or comand-line options

        Setting

         not set   32-bit copiler mode.
          32       32-bit copiler mode.
          64       64-bit copiler mode.
         32_64     Fatal error and stop, unless an explicit configuration
                   file or comand-line compiler-mode setting exists.
        any other  Fatal error and stop, unless an explicit configuration
                   file or comand-line compiler-mode setting exists.

  For a detailed description of each option, please refer to the online
  docuentation.

